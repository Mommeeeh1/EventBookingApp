@page "/admin"

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using TicketHive.Shared
@using TicketHive.Shared.Models
@attribute [Authorize(Roles = "Admin")]
@inject IEventRepo eventRepo

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
<PageTitle>Event Manager</PageTitle>

<div style="display:flex;  justify-content:space-between">

    <table  >

        <thead id="table-head"  >

            <tr id="head-display">

                <th>Name</th>

                <th>Type</th>

                <th>Place</th>

                <th>Tickets</th>
                <th>Sold X</th>
                <th>Date</th>
                <th></th>

            </tr>

        </thead>


        
        <tbody id="table-body" >

            @foreach (var items in events)
            {
                <tr id="table-row">
                    
                    <td id="item-display">@items.EventName</td>


                    <td id="item-display">@items.EventType</td>

                    <td id="item-display">@items.EventPlace</td>

                    <td id="item-display">@items.TotalTickets</td>

                    <td id="item-display">@items.AvailableTickets</td>

                    <td id="item-display">@items.Date</td>
                    <td>
                        <button id="trash-button" @onclick=" (() => ShowConfirmation(items.Id)) " class="fas fa-trash-alt"> </button>
                    </td>
   
  
                </tr>
            }

        </tbody>

    </table>

    <div style="text-align:right; margin-right:250px">
        <EditForm Model="newEvent" OnSubmit="SumbitHandle">

            <div>
                <InputText placeholder="Event Name" id="EventName" @bind-Value="newEvent.EventName"></InputText>
            </div>
            <div>
                <InputText placeholder="Event Type" id="EventType" @bind-Value="newEvent.EventType"></InputText>
            </div>

            <div>
                <InputText placeholder="Event Place" id="EventPlace" @bind-Value="newEvent.EventPlace"></InputText>
            </div>

            <div>
                <InputText placeholder="Event Details" id="EventDetails" @bind-Value="newEvent.EventDetails"></InputText>
            </div>
            <div>
                <input  type="datetime-local" @bind-value="newEvent.Date" />

            </div>
            <div>
                <label>Price Per Ticket</label>
                <InputNumber placeholder="Price Per ticket" id="EventPerTicket" @bind-Value="newEvent.PricePerTicket"></InputNumber>
            </div>

            <div>
                <label>Total Tickets</label>
                <InputNumber placeholder="Total Tickets" id="EventTotalTickets" @bind-Value="newEvent.TotalTickets"></InputNumber>
            </div>
            <div>
                <label>Sold Tickets</label>
                <InputNumber placeholder="Sold Tickets" id="EventSoldTickets" @bind-Value="newEvent.AvailableTickets"></InputNumber>
            </div>
            <div>
                <button id="TheButton" type="submit">Publish Event</button>
            </div>

        </EditForm>
    </div>

    @if (showConfirmation == true)
    {
        <div class="modal" tabindex="-1" role="dialog" style="display:block">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <divid id="modal-header" class="modal-header">
                        <h5 id="modal-title"  class="modal-title">Confirm Removal</h5>
                        <button class="btn btn-close" data-dismiss="modal"  @onclick="CloseConfirmation">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </divid>
                    <div class="modal-body">
                        <p>Do you want to delete this event?</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" @onclick="DeleteEvent">Yes</button>
                        <button type="button" class="btn btn-success" @onclick="CloseConfirmation" data-dismiss="modal">No</button>
                    </div>
                </div>
            </div>
        </div>
    }

</div>


<style>
   
    #table-row{
        text-align:center;
    }

    #table-head{
        border-radius:20px;
        background-color: dimgrey;

    }
    #table-body{
        border-radius:20px;
        background-color:white
    }

    #modal-header{
        background-color:red;
        
    }

    #head-display {
        text-align: center;
        align-content: center
    }

    #item-display {
        padding: 15px;
        align-content: center;
    }

    #EventName {
        width: 200px;
        height: 45px;
        border-radius: 20px;
        border-color: black;
        margin-top: 30px;
        text-align: center
    }

    #EventType {
        width: 200px;
        height: 45px;
        border-radius: 20px;
        border-color: black;
        margin-top: 30px;
        text-align: center
    }

    #EventPlace {
        width: 200px;
        height: 45px;
        border-radius: 20px;
        border-color: black;
        margin-top: 30px;
        text-align: center;
    }

    #EventDetails {
        width: 200px;
        height: 45px;
        border-radius: 20px;
        border-color: black;
        margin-top: 30px;
        text-align: center;
    }

    #EventPerTicket {
        width: 200px;
        height: 45px;
        border-radius: 20px;
        border-color: black;
        margin-top: 30px;
        text-align: center;
    }

    #EventTotalTickets {
        width: 200px;
        height: 45px;
        border-radius: 20px;
        border-color: black;
        margin-top: 30px;
        text-align: center;
    }

    #EventSoldTickets {
        width: 200px;
        height: 45px;
        border-radius: 20px;
        border-color: black;
        margin-top: 30px;
        text-align: center;
    }

    #EventDate {
        width: 200px;
        height: 45px;
        border-radius: 20px;
        border-color: black;
        margin-top: 30px;
        text-align: center;
    }

    #TheButton {
        width: 200px;
        height: 50px;
        border-radius: 40px;
        text-align: center;
        font-size: larger;
        margin-top: 15px;
        transition: all 0.3s;
        background: linear-gradient(#1D4ED8, #5a5e9a);
    }



        #TheButton:hover {
            transform: translateY(-6px);
        }



    #trash-button{
    
        background-color: red;
        padding: 10px 20px;
        border: none;
        border-radius: 10px;
        font-size: 18px;
        cursor: pointer;
    }
    }

</style>





@code {

    private bool showConfirmation = false;
    private int eventToRemoveId;
    private List<EventModel> events = new();

    protected override async Task OnInitializedAsync()
    {
        events = await eventRepo.GetAllEvents();
    }
    EventModel newEvent = new();

    async Task SumbitHandle()
    {
        await eventRepo.AddEvent(newEvent);
        events = await eventRepo.GetAllEvents();

    }

    private void ShowConfirmation(int id)
    {
        showConfirmation = true;
        eventToRemoveId = id;
    }

    private void CloseConfirmation()
    {
        showConfirmation = false;
    }

    async Task DeleteEvent()
    {
        await eventRepo.RemoveEvent(eventToRemoveId);
        showConfirmation = false;
        events = await eventRepo.GetAllEvents();
    }

   
    
}

